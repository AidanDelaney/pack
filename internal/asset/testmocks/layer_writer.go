// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/buildpacks/pack/internal/asset (interfaces: LayerWriter)

// Package testmocks is a generated GoMock package.
package testmocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"

	asset "github.com/buildpacks/pack/internal/asset"
	dist "github.com/buildpacks/pack/internal/dist"
)

// MockLayerWriter is a mock of LayerWriter interface
type MockLayerWriter struct {
	ctrl     *gomock.Controller
	recorder *MockLayerWriterMockRecorder
}

// MockLayerWriterMockRecorder is the mock recorder for MockLayerWriter
type MockLayerWriterMockRecorder struct {
	mock *MockLayerWriter
}

// NewMockLayerWriter creates a new mock instance
func NewMockLayerWriter(ctrl *gomock.Controller) *MockLayerWriter {
	mock := &MockLayerWriter{ctrl: ctrl}
	mock.recorder = &MockLayerWriterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockLayerWriter) EXPECT() *MockLayerWriterMockRecorder {
	return m.recorder
}

// AddAssetBlobs mocks base method
func (m *MockLayerWriter) AddAssetBlobs(arg0 ...asset.Blob) {
	m.ctrl.T.Helper()
	varargs := []interface{}{}
	for _, a := range arg0 {
		varargs = append(varargs, a)
	}
	m.ctrl.Call(m, "AddAssetBlobs", varargs...)
}

// AddAssetBlobs indicates an expected call of AddAssetBlobs
func (mr *MockLayerWriterMockRecorder) AddAssetBlobs(arg0 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddAssetBlobs", reflect.TypeOf((*MockLayerWriter)(nil).AddAssetBlobs), arg0...)
}

// AssetMetadata mocks base method
func (m *MockLayerWriter) AssetMetadata() dist.AssetMap {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AssetMetadata")
	ret0, _ := ret[0].(dist.AssetMap)
	return ret0
}

// AssetMetadata indicates an expected call of AssetMetadata
func (mr *MockLayerWriterMockRecorder) AssetMetadata() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AssetMetadata", reflect.TypeOf((*MockLayerWriter)(nil).AssetMetadata))
}

// Close mocks base method
func (m *MockLayerWriter) Close() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Close")
	ret0, _ := ret[0].(error)
	return ret0
}

// Close indicates an expected call of Close
func (mr *MockLayerWriterMockRecorder) Close() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Close", reflect.TypeOf((*MockLayerWriter)(nil).Close))
}

// Open mocks base method
func (m *MockLayerWriter) Open() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Open")
	ret0, _ := ret[0].(error)
	return ret0
}

// Open indicates an expected call of Open
func (mr *MockLayerWriterMockRecorder) Open() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Open", reflect.TypeOf((*MockLayerWriter)(nil).Open))
}

// Write mocks base method
func (m *MockLayerWriter) Write(arg0 asset.Writable) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Write", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Write indicates an expected call of Write
func (mr *MockLayerWriterMockRecorder) Write(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Write", reflect.TypeOf((*MockLayerWriter)(nil).Write), arg0)
}
